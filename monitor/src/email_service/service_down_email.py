"""
Is the entry point for sending service down emails
"""

import textwrap
from datetime import datetime

from monitor.src.email_service.authentication import authenticate_gmail
from monitor.src.email_service.email_message import create_email_message
from monitor.src.email_service.send_email import send_email


def send_service_down(service_name=None):
    """Sends the service down email"""
    current_time = datetime.now()

    service = authenticate_gmail()
    sender = "qubeditoronservice@gmail.com"
    recipient = "thomasabrownlee@gmail.com"
    subject = f"Service Down Notice: {service_name}"
    body = generate_service_down_email(service_name, current_time)

    email_message = create_email_message(sender, recipient, subject, body)
    send_email(service, "me", email_message)


def generate_service_down_email(service_name, downtime_start):
    """
    Generates an email body for a service down notification.

    Credit: String message was generated by ChatGPT.
    """
    email_body = textwrap.dedent(
        f"Subject: Alert: {service_name} is down on QUBeditoron3000\n\n"
        f"Dear User,\n\n"
        f"We regret to inform you that the {service_name} service on QUBeditoron3000 "
        f"is currently down. Our technical team is aware of the issue and is "
        f"working diligently to resolve it.\n\n"
        f"**Details:**\n"
        f"- **Service Name:** {service_name}\n"
        f"- **Downtime Start:** {downtime_start}\n"
        f"- **Estimated Recovery Time:** Not yet determined\n\n"
        f"We sincerely apologize for any inconvenience this may cause. "
        f"Please rest assured that we are doing our best to restore the "
        f"service as quickly as possible.\n\n"
        f"Thank you for your understanding and patience.\n\n"
        f"Best regards,\n"
        f"The QUBeditoron3000 Team\n"
    )
    return email_body


if __name__ == "__main__":
    send_service_down("Test Service")
